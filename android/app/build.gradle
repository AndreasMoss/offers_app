import java.util.Properties


plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}


def loadEnv() {
    Properties properties = new Properties()
    def envFile = new File(rootProject.rootDir.parentFile, ".env")
    println("Looking for .env file in: ${envFile.absolutePath}")
    if (envFile.exists()) {
        println(".env file found. Loading properties...")
        envFile.withInputStream {
            properties.load(it)
        }
    } else {
        throw new GradleException(".env file not found at ${envFile.absolutePath}")
    }
    return properties
}

// Αποθήκευση των properties στο ext ώστε να είναι διαθέσιμα
ext {
    env = loadEnv()
}

android {
    namespace = "com.andreas.offers_app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    buildFeatures {
        buildConfig true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.andreas.offers_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        buildConfigField "String", "GOOGLE_MAPS_API_KEY", "\"${env['GOOGLE_MAPS_API_KEY']}\""
        manifestPlaceholders = [
        GOOGLE_MAPS_API_KEY: "${env['GOOGLE_MAPS_API_KEY']}"
    ]
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
